// DO NOT MODIFY THIS FILE. This file is automatically generated by Forestry
export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
};

export type Pages_DocumentUnion = Post;

export type Pages_DocumentNode = {
  __typename?: 'Pages_DocumentNode';
  path?: Maybe<Scalars['String']>;
  relativePath?: Maybe<Scalars['String']>;
  breadcrumbs?: Maybe<Array<Maybe<Scalars['String']>>>;
  basename?: Maybe<Scalars['String']>;
  extension?: Maybe<Scalars['String']>;
  filename?: Maybe<Scalars['String']>;
  node?: Maybe<Pages_DocumentUnion>;
};


export type Pages_DocumentNodeBreadcrumbsArgs = {
  excludeExtension?: Maybe<Scalars['Boolean']>;
};

export type Query = {
  __typename?: 'Query';
  getPagesDocument?: Maybe<Pages_DocumentNode>;
  getPagesDocuments?: Maybe<Array<Maybe<Pages_DocumentNode>>>;
  document?: Maybe<DocumentNode>;
  documents?: Maybe<Array<Maybe<DocumentNode>>>;
  getSections?: Maybe<Array<Maybe<SectionUnion>>>;
  getSection?: Maybe<SectionUnion>;
  documentList?: Maybe<Array<Maybe<Scalars['String']>>>;
  documentListBySection?: Maybe<Array<Maybe<DocumentNode>>>;
  media?: Maybe<Scalars['String']>;
  mediaList?: Maybe<Array<Maybe<Scalars['String']>>>;
};


export type QueryGetPagesDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
};


export type QueryGetPagesDocumentsArgs = {
  first?: Maybe<Scalars['Int']>;
  after?: Maybe<Scalars['String']>;
  last?: Maybe<Scalars['Int']>;
  before?: Maybe<Scalars['String']>;
};


export type QueryDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
  section?: Maybe<Scalars['String']>;
};


export type QueryDocumentsArgs = {
  section?: Maybe<Scalars['String']>;
};


export type QueryGetSectionArgs = {
  section?: Maybe<Scalars['String']>;
};


export type QueryDocumentListArgs = {
  directory?: Maybe<Scalars['String']>;
};


export type QueryDocumentListBySectionArgs = {
  section?: Maybe<Scalars['String']>;
};


export type QueryMediaArgs = {
  path?: Maybe<Scalars['String']>;
};


export type QueryMediaListArgs = {
  directory?: Maybe<Scalars['String']>;
};

export type Mutation = {
  __typename?: 'Mutation';
  updateDocument?: Maybe<DocumentNode>;
  addPendingDocument?: Maybe<DocumentNode>;
};


export type MutationUpdateDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
  section?: Maybe<Scalars['String']>;
  params?: Maybe<DocumentInput>;
};


export type MutationAddPendingDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
  section?: Maybe<Scalars['String']>;
  template?: Maybe<Scalars['String']>;
};

export type Post_InputData = {
  title?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['String']>;
  hero_image?: Maybe<Scalars['String']>;
  date?: Maybe<Scalars['String']>;
};

export type Post_Input = {
  data?: Maybe<Post_InputData>;
  content?: Maybe<Scalars['String']>;
};

export type DocumentInput = {
  Post_Input?: Maybe<Post_Input>;
};

export type TextField = {
  __typename?: 'TextField';
  name?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
};

export type FileField = {
  __typename?: 'FileField';
  name?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
};

export type DatetimeField = {
  __typename?: 'DatetimeField';
  name?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
};

export type Post_FormFields = TextField | FileField | DatetimeField;

export type Post_Form = {
  __typename?: 'Post_Form';
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  fields?: Maybe<Array<Maybe<Post_FormFields>>>;
};

export type Post_Data = {
  __typename?: 'Post_Data';
  title?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['String']>;
  hero_image?: Maybe<Scalars['String']>;
  date?: Maybe<Scalars['String']>;
};

export type Post_InitialValues = {
  __typename?: 'Post_InitialValues';
  title?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['String']>;
  hero_image?: Maybe<Scalars['String']>;
  date?: Maybe<Scalars['String']>;
};

export type Post = {
  __typename?: 'Post';
  form?: Maybe<Post_Form>;
  data?: Maybe<Post_Data>;
  initialValues?: Maybe<Post_InitialValues>;
};

export type DocumentUnion = Post;

export type DocumentNode = {
  __typename?: 'DocumentNode';
  path?: Maybe<Scalars['String']>;
  relativePath?: Maybe<Scalars['String']>;
  breadcrumbs?: Maybe<Array<Maybe<Scalars['String']>>>;
  basename?: Maybe<Scalars['String']>;
  extension?: Maybe<Scalars['String']>;
  filename?: Maybe<Scalars['String']>;
  node?: Maybe<DocumentUnion>;
};


export type DocumentNodeBreadcrumbsArgs = {
  excludeExtension?: Maybe<Scalars['Boolean']>;
};

export type SectionUnion = {
  __typename?: 'SectionUnion';
  type?: Maybe<Scalars['String']>;
  path?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  create?: Maybe<Scalars['String']>;
  match?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['String']>>>;
  slug?: Maybe<Scalars['String']>;
  documents?: Maybe<Array<Maybe<DocumentNode>>>;
};

export type Pages_DocumentNodeUnion = Post;

export type Pages_Section = {
  __typename?: 'Pages_Section';
  path?: Maybe<Scalars['String']>;
  relativePath?: Maybe<Scalars['String']>;
  breadcrumbs?: Maybe<Array<Maybe<Scalars['String']>>>;
  basename?: Maybe<Scalars['String']>;
  extension?: Maybe<Scalars['String']>;
  filename?: Maybe<Scalars['String']>;
  node?: Maybe<Pages_DocumentNodeUnion>;
};


export type Pages_SectionBreadcrumbsArgs = {
  excludeExtension?: Maybe<Scalars['Boolean']>;
};

export type DocumentNodeUnion = Pages_Section;

